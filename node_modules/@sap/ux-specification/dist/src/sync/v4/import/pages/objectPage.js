"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const decorators_1 = require("../../../common/decoration/decorators");
const utils_1 = require("../../../common/utils");
const controls_1 = require("../../export/controls");
const ObjectPage_1 = require("../../export/pages/ObjectPage");
function transferSettingsOfObject(object, manifest, jsonSchema, pageName, sectionId) {
    if (!jsonSchema) {
        return;
    }
    let manifestSection = {};
    for (const key in jsonSchema['properties'] || jsonSchema) {
        const exportPropertyRule = decorators_1.getExportRuleMetadata(object, key);
        if (exportPropertyRule && exportPropertyRule.manifest) {
            const targetAnnotationEncoded = sectionId && sectionId.replace('/', '::');
            const path = exportPropertyRule.manifest.path([pageName], targetAnnotationEncoded);
            manifestSection = utils_1.getManifestSectionByPathV4(manifest, path, sectionId, targetAnnotationEncoded);
            object[key] = exportPropertyRule.manifest.import
                ? exportPropertyRule.manifest.import(manifestSection, sectionId)
                : exportPropertyRule.manifest.key
                    ? manifestSection[exportPropertyRule.manifest.key]
                    : manifestSection[key];
        }
    }
}
function addSettings(objectPageConfig, manifest, v4Page, jsonSchema) {
    if (!objectPageConfig.header) {
        objectPageConfig.header = new controls_1.ObjectPageHeader();
    }
    transferSettingsOfObject(objectPageConfig.header, manifest, jsonSchema['definitions']['ObjectPageHeader'], v4Page.id);
    transferSettingsOfObject(objectPageConfig, manifest, jsonSchema['properties'], v4Page.id);
    if (!objectPageConfig.sections) {
        objectPageConfig.sections = {};
    }
    const settings = v4Page.options.settings;
    if (settings) {
        if (settings.controlConfiguration) {
            for (const sectionId in settings.controlConfiguration) {
                objectPageConfig.sections[sectionId] = { table: new controls_1.ObjectPageTable() };
                transferSettingsOfObject(objectPageConfig.sections[sectionId].table, manifest, jsonSchema['definitions']['TableSettings'], v4Page.id, sectionId);
            }
        }
        // Custom sections
        const customSections = settings.content && settings.content.body && settings.content.body.sections;
        if (customSections) {
            objectPageConfig.sections.custom = [];
            for (const sectionId in customSections) {
                const section = new controls_1.ObjectPageCustomSectionFragment();
                transferSettingsOfObject(section, manifest, jsonSchema['definitions']['ObjectPageCustomSectionFragment'], v4Page.id, sectionId);
                objectPageConfig.sections.custom.push(section);
            }
        }
    }
}
function createObjectPageConfig(manifest, jsonSchema, routingId) {
    const v4Pages = manifest['sap.ui5']['routing']['targets'];
    const v4Page = v4Pages[routingId];
    const config = new ObjectPage_1.ObjectPage();
    addSettings(config, manifest, v4Page, jsonSchema);
    return config;
}
exports.createObjectPageConfig = createObjectPageConfig;
//# sourceMappingURL=objectPage.js.map
import { SapUiAppPageV2, SapUiAppPagesV2 } from '../../../specification/v2/webapp';
import { Manifest } from '../../../specification/common/webapp/manifest/Manifest';
import { PageType, FioriElementsVersion } from '../../../specification/common';
export declare function getV2Pages(manifest: Manifest): SapUiAppPagesV2;
/**
 * Return the page type for a given page in manifest
 * @param name - page component name
 */
export declare function getPageType(name: any): PageType;
/**
 * Escape logic copied from the V2 StableIdHelper
 * @param sParam - Parameter or value that shall be escaped
 * @returns string - escaped sParam value
 */
export declare function escapeIdParameter(sParam: string): string;
export declare function findObjectPage(v2Pages: SapUiAppPagesV2, entitySet: string, pageKeys: string[]): SapUiAppPageV2;
export declare function findListReportPage(v2Pages: SapUiAppPagesV2, pageKeys: string[]): SapUiAppPageV2;
export declare function findAnalyticalListPage(v2Pages: SapUiAppPagesV2, pageKeys: string[]): SapUiAppPageV2;
export declare function findObjectPageinManifest(manifest: object, entitySet: string, pageKeys: string[]): SapUiAppPageV2;
/**
 * Method which generates id of page according to passed parameters.
 * @param appVersion - Fiori Elements version - V2 or V4.
 * @param pageType - Page type.
 * @param entitySet - Entity Set.
 * @param navigationProperty - Navigation property (optional).
 * @param viewId - Custom page's viewId (optional).
 * @returns {string} Generated page id
 */
export declare function generatePageId(appVersion: FioriElementsVersion, pageType: PageType, entitySet: string, navigationProperty?: string, viewId?: string): string;
/**
 * Method which finds custom section extensions in manifest for passed entitySet
 * @param manifest - manifest.
 * @param entitySet - Entity set to lookup while searching custom section extensions.
 * @returns {object} Found object with custom sections
 */
export declare function findCustomSectionExtensions(manifest: object, entitySet: string): object;
